#!/usr/bin/python
import argparse
import subprocess
import time
from influxdb import InfluxDBClient

def main():
    host='<%= influxdb_host %>'
    port=<%= influxdb_port %>
    user='<%= influxdb_user %>'
    password='<%= influxdb_password %>'
    dbuser_password='<%= influxdb_dbuser_password %>'
    dbname = 'mon'
    monusers = ['mon_api', 'mon_persister']
    db_exists = False

    client = InfluxDBClient(host, port, user, password, dbname)
    dbs = client.get_database_list()
    for db in dbs:
        if db['name'] == dbname:
            db_exists = True

    if db_exists:
        print("Database %s already exists, not adding." % dbname)
    else:
        print("Adding %s database." % dbname)
        client.create_database(dbname)

    for monuser in monusers:
        add_user(client, monuser, dbuser_password)

def add_user(client, user, dbuser_password):
    user_exists = False
    dbusers = client.get_database_users()
    for dbuser in dbusers:
        if dbuser['name'] == user:
            user_exists = True

    if user_exists:
        print("User %s already exists, not adding." % user)
    else:
        print("Adding %s user." % user)
        client.add_database_user(user, dbuser_password)
        print("Making %s user a database admin." % user)
        client.set_database_admin(user)

def wait_for_influx():
    running = False
    attempts=0

    while (attempts < 60):
        #
        # Make sure the influxdb http process is up
        #
        proc = subprocess.Popen(['/bin/netstat','-plnt'],
                                 stdout=subprocess.PIPE,
                                 stderr=subprocess.PIPE)
        for line in proc.stdout.readlines():
            if "influxdb" in line and "8086" in line:
                running = True
        retval = proc.wait()
        if running:
            return
        else:
            time.sleep(1)
            attempts += 1

    print("Influxdb didn't come up after waiting 60 seconds.")
    exit(1)

if __name__ == '__main__':
    wait_for_influx()
    main()
